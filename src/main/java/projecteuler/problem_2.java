package projecteuler;

import java.util.List;
import java.util.stream.LongStream;
import java.util.stream.Stream;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be:
 *  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 *  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 *  even-valued terms.
 */
public class problem_2 {
    public static Long getSumOfEvenFibonacciNumbers(Long upperBound) {
        return Stream.iterate(new Long[] { 0L, 2L }, pair -> new Long[] { pair[1], pair[0] + pair[1]} )
                .filter(f -> f[0] + f[1] < upperBound && f[0] % 2 == 0)
                .map(l -> l[0])
                .reduce(0L, (x, y) -> x + y);
    }
}
